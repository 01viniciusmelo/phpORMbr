{"name":" phpORMbr","tagline":"ORM PHP simples para ser utilizado com MySQL","body":"phpORMbr\r\n========\r\n\r\nORM PHP simples para ser utilizado com MySQL. Foi desenvolvido para simplificar operações básicas de manipulação de dados. Utiliza padrões de JSON para mapear as funções das classes e objetos, para recuperar os padrões utiliza as funções de reflection do PHP.\r\n\r\n\r\nInstalação\r\n-------\r\nSomente dois aquivos:\r\n* BasicDao.class.php: Lógica do ORM\r\n* ConnectionFactory.class.php: Singleton para a conexão com o BD\r\n\r\nClasse Mapeada\r\n-------\r\n\r\nÉ simples mapear a classe, basta colocar as propriedades nos comentários.\r\n\r\n```php\r\n/**\r\n * \"Tabela\":\"usuario\"\r\n */\r\nclass Usuario {\r\n\r\n    /**\r\n     * \"Coluna\":\"id\",\r\n     * \"Tipo\":\"int\",\r\n     * \"AutoIncremento\":\"sim\",\r\n     * \"ChavePrimaria\":\"sim\",\r\n     * \"Nulo\":\"nao\"\r\n     */    \r\n    private $id;\r\n    \r\n    /**\r\n     * \"Coluna\":\"nome\",\r\n     * \"Tipo\":\"varchar\",\r\n     * \"Tamanho\":80,\r\n     * \"Nulo\":\"nao\"\r\n     */    \r\n    private $nome;\r\n    \r\n    /**\r\n     * \"Coluna\":\"email\",\r\n     * \"Tipo\":\"varchar\",\r\n     * \"Tamanho\":80,\r\n     * \"Nulo\":\"nao\"\r\n     */    \r\n    private $email;\r\n    \r\n    /**\r\n     * \"Coluna\":\"senha\",\r\n     * \"Tipo\":\"varchar\",\r\n     * \"Tamanho\":20,\r\n     * \"Nulo\":\"nao\"\r\n     */    \r\n    private $senha;\r\n    \r\n    /**\r\n     * \"Coluna\":\"tipo\",\r\n     * \"Tipo\":\"int\",\r\n     * \"Tamanho\":1,\r\n     * \"Nulo\":\"nao\"\r\n     */    \r\n    private $tipo;\r\n    \r\n    //getters e setters\r\n    \r\n}\r\n```\r\n\r\nExemplos de uso\r\n-------\r\n\r\nUtilizando os métodos para manipular os dados para um CRUD simples.\r\n\r\n\r\n### Importando\r\n```php\r\n\r\n    require './Usuario.class.php';\r\n    require './dao/BasicDao.class.php';\r\n    \r\n    $dao = new BasicDao();\r\n```\r\n\r\n### Inserir\r\nBasta criar o objeto, preencha as propriedades e **salvar**!\r\n```php    \r\n    //Inserir\r\n    $u = new Usuario();\r\n    $u->setNome(\"Fulano da Silva\");\r\n    $u->setEmail(\"fulano@gmail.com\");\r\n    $u->setSenha(\"123\");\r\n    $dao->salvar($u);\r\n```\r\n\r\n### Atualizar\r\nCrie um objeto, preencha as propriedades e **salvar**! Não esqueça de preencher a propriedade marcada como Chave Primária! Se a chave primária estiver preenchida o método faz um UPDATE caso  contrário faz INSERT dos dados.\r\n\r\n```php\r\n    //Atualizar    \r\n    $u = new Usuario();\r\n    $u->setId(5);\r\n    $u->setNome(\"Ciclado da Silva\");\r\n    $u->setEmail(\"ciclano@gmail.com\");\r\n    $u->setSenha(\"456\");\r\n    $dao->salvar($u);\r\n```\r\n\r\n### Recuperar\r\nCrie um objeto que servirá de modelo para a pesquisa, no exemplo se mais de um registro possuir no campo email o valor \"ciclano@gmail.com\" ambos serão retornados. O retorno é uma array, por reflection o método **recuperar** retorna uma array do mesmo tipo do modelo que foi passado. \r\n```php\r\n    //Recuperar    \r\n    $u = new Usuario();\r\n    $u->setEmail(\"ciclano@gmail.com\");\r\n    $usuarios = $dao->recuperar($u);\r\n    foreach ($usuarios as $usuario) {\r\n        echo $usuario->getId().'<br>';\r\n        echo $usuario->getNome().'<br>';\r\n        echo $usuario->getEmail().'<br><br>';\r\n    }\r\n```\r\n\r\n### Excluir\r\nO método **excluir** é bem simples, basta criar um objeto e preencher a propriedade da chave primária com o identificador que se desejado e pronto!\r\n```php    \r\n    //Excluir\r\n    $u = new Usuario();\r\n    $u->setId(5);\r\n    $dao->excluir($u);\r\n\r\n```\r\n\r\nPróximos passos\r\n-------\r\nMuitas coisas ainda podem ser feitas, basta ajuda e colaboração para que o framework possa ficar mais robusto e com funções avançadas. Algumas sugestões de mudanças:\r\n\r\n* Tratamento de Exceções;\r\n* OneToMany, ManyToOne e ManyToMany;\r\n* Integração com outros DBMSs;\r\n* Trabalhar e Interpretar tipos de dados diferentes;\r\n* E muito mais!\r\n \r\nDownload, Fork e Commit!\r\n-------\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}